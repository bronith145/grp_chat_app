{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/lib/api.js"],"sourcesContent":["// lib/api.js\r\nimport axios from 'axios'\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api'\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000, // 10 seconds timeout\r\n})\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Get token from localStorage if available\r\n    if (typeof window !== 'undefined') {\r\n      const token = localStorage.getItem('auth-storage')\r\n      if (token) {\r\n        try {\r\n          const parsed = JSON.parse(token)\r\n          if (parsed.state?.token) {\r\n            config.headers.Authorization = `Bearer ${parsed.state.token}`\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing stored auth token:', error)\r\n        }\r\n      }\r\n    }\r\n    return config\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response\r\n  },\r\n  (error) => {\r\n    // Handle common errors\r\n    if (error.response?.status === 401) {\r\n      // Unauthorized - clear auth and redirect to login\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('auth-storage')\r\n        window.location.href = '/login'\r\n      }\r\n    }\r\n    \r\n    if (error.response?.status === 500) {\r\n      console.error('Server error:', error.response.data)\r\n    }\r\n    \r\n    if (error.code === 'ECONNABORTED') {\r\n      console.error('Request timeout')\r\n    }\r\n    \r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// API endpoints\r\nexport const endpoints = {\r\n  // Auth endpoints\r\n  login: '/auth/login',\r\n  register: '/auth/register',\r\n  logout: '/auth/logout',\r\n  getCurrentUser: '/auth/me',\r\n  \r\n  // User endpoints\r\n  updateProfile: '/users/profile',\r\n  searchUsers: '/users/search',\r\n  \r\n  // Chat endpoints\r\n  getChats: '/chat',\r\n  createChat: '/chat',\r\n  getChatMessages: (chatId) => `/chat/${chatId}/messages`,\r\n  sendMessage: (chatId) => `/chat/${chatId}/messages`,\r\n  markAsRead: (chatId) => `/chat/${chatId}/read`,\r\n  \r\n  // Other endpoints\r\n  uploadFile: '/upload',\r\n}\r\n\r\nexport default api\r\n"],"names":[],"mappings":"AAAA,aAAa;;;;;AACb;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAExD,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;IACA,SAAS;AACX;AAEA,wCAAwC;AACxC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC,2CAA2C;IAC3C;;IAaA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,0CAA0C;AAC1C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,uBAAuB;IACvB,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAClC,kDAAkD;QAClD;;IAIF;IAEA,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAClC,QAAQ,KAAK,CAAC,iBAAiB,MAAM,QAAQ,CAAC,IAAI;IACpD;IAEA,IAAI,MAAM,IAAI,KAAK,gBAAgB;QACjC,QAAQ,KAAK,CAAC;IAChB;IAEA,OAAO,QAAQ,MAAM,CAAC;AACxB;AAIK,MAAM,YAAY;IACvB,iBAAiB;IACjB,OAAO;IACP,UAAU;IACV,QAAQ;IACR,gBAAgB;IAEhB,iBAAiB;IACjB,eAAe;IACf,aAAa;IAEb,iBAAiB;IACjB,UAAU;IACV,YAAY;IACZ,iBAAiB,CAAC,SAAW,CAAC,MAAM,EAAE,OAAO,SAAS,CAAC;IACvD,aAAa,CAAC,SAAW,CAAC,MAAM,EAAE,OAAO,SAAS,CAAC;IACnD,YAAY,CAAC,SAAW,CAAC,MAAM,EAAE,OAAO,KAAK,CAAC;IAE9C,kBAAkB;IAClB,YAAY;AACd;uCAEe","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/lib/stores/authStore.ts"],"sourcesContent":["import { create } from 'zustand'\r\nimport { persist } from 'zustand/middleware'\r\nimport { StateCreator } from 'zustand'\r\nimport api from '@/lib/api'\r\nimport toast from 'react-hot-toast'\r\n\r\ninterface User {\r\n  id: string\r\n  username: string\r\n  email: string\r\n  avatar?: string\r\n  isOnline: boolean\r\n  friends?: User[]\r\n  friendRequests?: FriendRequest[]\r\n}\r\n\r\ninterface FriendRequest {\r\n  _id: string\r\n  from: {\r\n    _id: string\r\n    username: string\r\n    avatar?: string\r\n  }\r\n  createdAt: string\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null\r\n  token: string | null\r\n  isLoading: boolean\r\n  isAuthenticated: boolean\r\n  login: (email: string, password: string) => Promise<boolean>\r\n  register: (username: string, email: string, password: string) => Promise<boolean>\r\n  logout: () => void\r\n  updateUser: (userData: Partial<User>) => void\r\n  getCurrentUser: () => Promise<void>\r\n  setToken: (token: string) => void\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      user: null,\r\n      token: null,\r\n      isLoading: false,\r\n      isAuthenticated: false,\r\n\r\n      login: async (email: string, password: string) => {\r\n        set({ isLoading: true })\r\n        try {\r\n          const response = await api.post('/auth/login', { email, password })\r\n          const { token, user } = response.data\r\n          \r\n          set({ \r\n            user, \r\n            token, \r\n            isAuthenticated: true, \r\n            isLoading: false \r\n          })\r\n          \r\n          // Set token in API headers\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n          \r\n          toast.success(`Welcome back, ${user.username}!`)\r\n          return true\r\n        } catch (error: any) {\r\n          set({ isLoading: false })\r\n          const message = error.response?.data?.error || 'Login failed'\r\n          toast.error(message)\r\n          return false\r\n        }\r\n      },\r\n\r\n      register: async (username: string, email: string, password: string) => {\r\n        set({ isLoading: true })\r\n        try {\r\n          const response = await api.post('/auth/register', { \r\n            username, \r\n            email, \r\n            password \r\n          })\r\n          const { token, user } = response.data\r\n          \r\n          set({ \r\n            user, \r\n            token, \r\n            isAuthenticated: true, \r\n            isLoading: false \r\n          })\r\n          \r\n          // Set token in API headers\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n          \r\n          toast.success(`Welcome to Chat App, ${user.username}!`)\r\n          return true\r\n        } catch (error: any) {\r\n          set({ isLoading: false })\r\n          const message = error.response?.data?.error || 'Registration failed'\r\n          toast.error(message)\r\n          return false\r\n        }\r\n      },\r\n\r\n      logout: () => {\r\n        // Call logout endpoint\r\n        api.post('/auth/logout').catch(() => {})\r\n        \r\n        // Clear state\r\n        set({ \r\n          user: null, \r\n          token: null, \r\n          isAuthenticated: false \r\n        })\r\n        \r\n        // Remove token from API headers\r\n        delete api.defaults.headers.common['Authorization']\r\n        \r\n        toast.success('Logged out successfully')\r\n      },\r\n\r\n      updateUser: (userData: Partial<User>) => {\r\n        const currentUser = get().user\r\n        if (currentUser) {\r\n          set({ user: { ...currentUser, ...userData } })\r\n        }\r\n      },\r\n\r\n      getCurrentUser: async () => {\r\n        const token = get().token\r\n        if (!token) return\r\n        \r\n        try {\r\n          const response = await api.get('/auth/me')\r\n          set({ \r\n            user: response.data.user, \r\n            isAuthenticated: true \r\n          })\r\n        } catch (error) {\r\n          // Token is invalid, clear auth state\r\n          get().logout()\r\n        }\r\n      },\r\n\r\n      setToken: (token: string) => {\r\n        set({ token })\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      }\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n      partialize: (state) => ({\r\n        user: state.user,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated\r\n      }),\r\n      onRehydrateStorage: () => (state) => {\r\n        if (state?.token) {\r\n          // Restore API authorization header\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${state.token}`\r\n        }\r\n      }\r\n    }\r\n  )\r\n)"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/lib/stores/chatStore.ts"],"sourcesContent":["import { create } from 'zustand'\r\nimport api, { endpoints } from '@/lib/api'\r\nimport toast from 'react-hot-toast'\r\n\r\ninterface User {\r\n  _id: string\r\n  username: string\r\n  avatar?: string\r\n  isOnline: boolean\r\n  lastSeen?: string\r\n}\r\n\r\ninterface Message {\r\n  _id: string\r\n  sender: User\r\n  content: string\r\n  messageType: 'text' | 'image' | 'file' | 'system'\r\n  encrypted: boolean\r\n  chat: string\r\n  createdAt: string\r\n  readBy: Array<{\r\n    user: string\r\n    readAt: string\r\n  }>\r\n  replyTo?: Message\r\n}\r\n\r\ninterface Chat {\r\n  _id?: string  // For backward compatibility\r\n  id?: string   // Current backend format, made optional since some objects only have _id\r\n  name: string\r\n  isGroup: boolean\r\n  participants: User[]\r\n  admin?: User\r\n  lastMessage?: Message\r\n  groupAvatar?: string\r\n  updatedAt: string\r\n  createdAt: string\r\n}\r\n\r\ninterface ChatState {\r\n  chats: Chat[]\r\n  currentChat: Chat | null\r\n  messages: Message[]\r\n  isLoading: boolean\r\n  isLoadingMessages: boolean\r\n  typingUsers: Set<string>\r\n  \r\n  // Actions\r\n  fetchChats: () => Promise<void>\r\n  createChat: (participantIds: string[], isGroup?: boolean, name?: string) => Promise<Chat | null>\r\n  selectChat: (chat: Chat) => void\r\n  fetchMessages: (chatId: string, page?: number) => Promise<void>\r\n  sendMessage: (chatId: string, content: string, replyTo?: string) => Promise<void>\r\n  markAsRead: (chatId: string) => void\r\n  addMessage: (message: Message) => void\r\n  updateMessage: (messageId: string, updates: Partial<Message>) => void\r\n  setTypingUsers: (users: Set<string>) => void\r\n  addTypingUser: (userId: string) => void\r\n  removeTypingUser: (userId: string) => void\r\n  clearCurrentChat: () => void\r\n}\r\n\r\nexport const useChatStore = create<ChatState>((set, get) => ({\r\n  chats: [],\r\n  currentChat: null,\r\n  messages: [],\r\n  isLoading: false,\r\n  isLoadingMessages: false,\r\n  typingUsers: new Set(),\r\n\r\n  fetchChats: async () => {\r\n    set({ isLoading: true })\r\n    try {\r\n      console.log('🔄 Fetching chats...')\r\n      console.log('📡 API base URL:', api.defaults.baseURL)\r\n      console.log('🔑 Auth token check...')\r\n      \r\n      const response = await api.get(endpoints.getChats)\r\n      console.log('📥 Raw response:', response)\r\n      console.log('📥 Response status:', response.status)\r\n      console.log('📥 Response data:', response.data)\r\n      console.log('📥 Chats array:', response.data.chats)\r\n      \r\n      if (response.data.chats && Array.isArray(response.data.chats)) {\r\n        console.log(`📊 Found ${response.data.chats.length} chats`)\r\n        response.data.chats.forEach((chat: any, index: number) => {\r\n          console.log(`💬 Chat ${index}:`, chat)\r\n          console.log(`🆔 Chat ${index} ID:`, chat._id)\r\n          console.log(`👤 Chat ${index} participants:`, chat.participants)\r\n        })\r\n        \r\n        // Map _id to id for consistency\r\n        const processedChats = response.data.chats.map((chat: any) => ({\r\n          ...chat,\r\n          id: chat._id || chat.id  // Ensure we have an id property\r\n        }))\r\n        \r\n        console.log('💾 Setting chats in store...')\r\n        set({ chats: processedChats, isLoading: false })\r\n        \r\n        // Verify what was actually stored\r\n        const currentState = get()\r\n        console.log('💾 Chats after setting in store:', currentState.chats)\r\n        if (currentState.chats && currentState.chats.length > 0) {\r\n          currentState.chats.forEach((chat: any, index: number) => {\r\n            console.log(`💾 Stored Chat ${index}:`, chat)\r\n            console.log(`💾 Stored Chat ${index} ID:`, chat._id)\r\n          })\r\n        }\r\n      } else {\r\n        console.log('❌ No chats array found in response')\r\n        set({ chats: [], isLoading: false })\r\n      }\r\n      \r\n    } catch (error: any) {\r\n      console.error('❌ Fetch chats error:', error)\r\n      console.error('❌ Error response:', error.response)\r\n      console.error('❌ Error data:', error.response?.data)\r\n      console.error('❌ Error status:', error.response?.status)\r\n      toast.error('Failed to load chats')\r\n      set({ isLoading: false })\r\n    }\r\n  },\r\n\r\n  createChat: async (participantIds: string[], isGroup = false, name = '') => {\r\n    try {\r\n      const response = await api.post(endpoints.createChat, {\r\n        participantIds,\r\n        isGroup,\r\n        name\r\n      })\r\n      \r\n      const newChat = response.data.chat\r\n      const currentChats = get().chats\r\n      \r\n      // Ensure the chat has consistent id format\r\n      const normalizedChat = {\r\n        ...newChat,\r\n        id: newChat.id || newChat._id\r\n      }\r\n      \r\n      // Check if chat already exists (for one-on-one chats)\r\n      if (response.data.isExisting) {\r\n        const existingChatIndex = currentChats.findIndex(c => \r\n          (c.id || c._id) === (normalizedChat.id || normalizedChat._id)\r\n        )\r\n        if (existingChatIndex === -1) {\r\n          set({ chats: [normalizedChat, ...currentChats] })\r\n        }\r\n      } else {\r\n        set({ chats: [normalizedChat, ...currentChats] })\r\n        toast.success(isGroup ? 'Group created successfully!' : 'Chat created!')\r\n      }\r\n      \r\n      return normalizedChat\r\n    } catch (error: any) {\r\n      console.error('Create chat error:', error)\r\n      toast.error('Failed to create chat')\r\n      return null\r\n    }\r\n  },\r\n\r\n  selectChat: (chat: Chat) => {\r\n    console.log('🔍 Selecting chat:', chat)\r\n    console.log('🆔 Chat ID:', chat?.id)\r\n    console.log('🆔 Chat _ID:', chat?._id)\r\n    console.log('🔍 Chat type:', typeof chat)\r\n    console.log('🔍 ID type:', typeof chat?.id)\r\n    \r\n    if (!chat) {\r\n      console.error('❌ No chat provided')\r\n      toast.error('No chat selected')\r\n      return\r\n    }\r\n    \r\n    // Use either id or _id for chat identification\r\n    const chatId = chat.id || chat._id\r\n    if (!chatId) {\r\n      console.error('❌ Chat missing both ID and _ID:', chat)\r\n      toast.error('Invalid chat - missing ID')\r\n      return\r\n    }\r\n    \r\n    // Ensure the chat object has an id property for consistency\r\n    const normalizedChat = {\r\n      ...chat,\r\n      id: chatId\r\n    }\r\n    \r\n    console.log('✅ Setting current chat with ID:', chatId)\r\n    set({ currentChat: normalizedChat, messages: [] })\r\n    get().fetchMessages(chatId)\r\n  },\r\n\r\n  fetchMessages: async (chatId: string, page = 1) => {\r\n    console.log('📬 Fetching messages for chatId:', chatId)\r\n    console.log('📬 ChatId type:', typeof chatId)\r\n    console.log('📬 ChatId value check:', chatId === undefined ? 'UNDEFINED!' : chatId)\r\n    \r\n    if (!chatId || chatId === 'undefined') {\r\n      console.error('❌ Invalid chatId for fetch messages:', chatId)\r\n      toast.error('Cannot fetch messages - invalid chat ID')\r\n      return\r\n    }\r\n    \r\n    set({ isLoadingMessages: true })\r\n    try {\r\n      const endpoint = `${endpoints.getChatMessages(chatId)}?page=${page}&limit=50`\r\n      console.log('📬 Fetching from endpoint:', endpoint)\r\n      \r\n      const response = await api.get(endpoint)\r\n      const newMessages = response.data.messages\r\n      \r\n      if (page === 1) {\r\n        set({ messages: newMessages, isLoadingMessages: false })\r\n      } else {\r\n        // Prepend older messages for pagination\r\n        const currentMessages = get().messages\r\n        set({ messages: [...newMessages, ...currentMessages], isLoadingMessages: false })\r\n      }\r\n      \r\n      // Mark messages as read\r\n      get().markAsRead(chatId)\r\n    } catch (error: any) {\r\n      console.error('❌ Fetch messages error:', error)\r\n      console.error('❌ Error for chatId:', chatId)\r\n      console.error('❌ Error response:', error.response?.data)\r\n      toast.error('Failed to load messages')\r\n      set({ isLoadingMessages: false })\r\n    }\r\n  },\r\n\r\n  sendMessage: async (chatId: string, content: string, replyTo?: string) => {\r\n    console.log('🏪 Store sendMessage called with:', { chatId, content, replyTo })\r\n    console.log('📤 Sending to endpoint:', endpoints.sendMessage(chatId))\r\n    \r\n    try {\r\n      const response = await api.post(endpoints.sendMessage(chatId), {\r\n        content,\r\n        replyTo\r\n      })\r\n      \r\n      console.log('✅ Message sent successfully:', response.data)\r\n      \r\n      const newMessage = response.data.data\r\n      \r\n      // Add message to current messages\r\n      const currentMessages = get().messages\r\n      set({ messages: [...currentMessages, newMessage] })\r\n      \r\n      // Update chat's last message in chat list\r\n      const currentChats = get().chats\r\n      const updatedChats = currentChats.map(chat => {\r\n        const currentChatId = chat.id || chat._id\r\n        return currentChatId === chatId \r\n          ? { ...chat, lastMessage: newMessage, updatedAt: new Date().toISOString() }\r\n          : chat\r\n      })\r\n      set({ chats: updatedChats })\r\n      \r\n    } catch (error: any) {\r\n      console.error('❌ Send message error:', error)\r\n      console.error('❌ Error response:', error.response?.data)\r\n      console.error('❌ Error status:', error.response?.status)\r\n      console.error('❌ Error headers:', error.response?.headers)\r\n      toast.error('Failed to send message')\r\n    }\r\n  },\r\n\r\n  markAsRead: async (chatId: string) => {\r\n    try {\r\n      await api.put(endpoints.markAsRead(chatId))\r\n    } catch (error: any) {\r\n      console.error('Mark as read error:', error)\r\n    }\r\n  },\r\n\r\n  addMessage: (message: Message) => {\r\n    const currentMessages = get().messages\r\n    const currentChat = get().currentChat\r\n    \r\n    // Only add if message belongs to current chat\r\n    if (currentChat) {\r\n      const currentChatId = currentChat.id || currentChat._id\r\n      if (message.chat === currentChatId) {\r\n        set({ messages: [...currentMessages, message] })\r\n      }\r\n    }\r\n    \r\n    // Update chat's last message in chat list\r\n    const currentChats = get().chats\r\n    const updatedChats = currentChats.map(chat => {\r\n      const chatId = chat.id || chat._id\r\n      return chatId === message.chat\r\n        ? { ...chat, lastMessage: message, updatedAt: new Date().toISOString() }\r\n        : chat\r\n    })\r\n    set({ chats: updatedChats })\r\n  },\r\n\r\n  updateMessage: (messageId: string, updates: Partial<Message>) => {\r\n    const currentMessages = get().messages\r\n    const updatedMessages = currentMessages.map(msg =>\r\n      msg._id === messageId ? { ...msg, ...updates } : msg\r\n    )\r\n    set({ messages: updatedMessages })\r\n  },\r\n\r\n  setTypingUsers: (users: Set<string>) => {\r\n    set({ typingUsers: users })\r\n  },\r\n\r\n  addTypingUser: (userId: string) => {\r\n    const currentTyping = get().typingUsers\r\n    const newTyping = new Set(currentTyping)\r\n    newTyping.add(userId)\r\n    set({ typingUsers: newTyping })\r\n  },\r\n\r\n  removeTypingUser: (userId: string) => {\r\n    const currentTyping = get().typingUsers\r\n    const newTyping = new Set(currentTyping)\r\n    newTyping.delete(userId)\r\n    set({ typingUsers: newTyping })\r\n  },\r\n\r\n  clearCurrentChat: () => {\r\n    set({ currentChat: null, messages: [], typingUsers: new Set() })\r\n  }\r\n}))"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/components/ui/LoadingSpinner.tsx"],"sourcesContent":["interface LoadingSpinnerProps {\r\n  size?: 'small' | 'medium' | 'large'\r\n  className?: string\r\n}\r\n\r\nexport default function LoadingSpinner({ \r\n  size = 'medium', \r\n  className = '' \r\n}: LoadingSpinnerProps) {\r\n  const sizeClasses = {\r\n    small: 'w-4 h-4',\r\n    medium: 'w-8 h-8',\r\n    large: 'w-12 h-12'\r\n  }\r\n\r\n  return (\r\n    <div className={`flex items-center justify-center ${className}`}>\r\n      <div \r\n        className={`${sizeClasses[size]} border-2 border-gray-300 border-t-blue-600 rounded-full animate-spin`}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAKe,SAAS,eAAe,EACrC,OAAO,QAAQ,EACf,YAAY,EAAE,EACM;IACpB,MAAM,cAAc;QAClB,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,iCAAiC,EAAE,WAAW;kBAC7D,cAAA,8OAAC;YACC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,qEAAqE,CAAC;;;;;;;;;;;AAI9G","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/components/providers/SocketProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react'\r\nimport { io, Socket } from 'socket.io-client'\r\nimport { useAuthStore } from '@/lib/stores/authStore'\r\nimport { useChatStore } from '@/lib/stores/chatStore'\r\nimport toast from 'react-hot-toast'\r\n\r\ninterface SocketContextType {\r\n  socket: Socket | null\r\n  isConnected: boolean\r\n  onlineUsers: Set<string>\r\n}\r\n\r\nconst SocketContext = createContext<SocketContextType>({\r\n  socket: null,\r\n  isConnected: false,\r\n  onlineUsers: new Set()\r\n})\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext)\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface SocketProviderProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function SocketProvider({ children }: SocketProviderProps) {\r\n  const [socket, setSocket] = useState<Socket | null>(null)\r\n  const [isConnected, setIsConnected] = useState(false)\r\n  const [onlineUsers, setOnlineUsers] = useState<Set<string>>(new Set())\r\n  \r\n  const { user, token, isAuthenticated } = useAuthStore()\r\n  const { \r\n    addMessage, \r\n    addTypingUser, \r\n    removeTypingUser, \r\n    currentChat,\r\n    fetchChats \r\n  } = useChatStore()\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated || !token || !user) {\r\n      // Disconnect socket if not authenticated\r\n      if (socket) {\r\n        socket.disconnect()\r\n        setSocket(null)\r\n        setIsConnected(false)\r\n      }\r\n      return\r\n    }\r\n\r\n    // Create socket connection\r\n    const newSocket = io(process.env.NEXT_PUBLIC_SOCKET_URL || 'http://localhost:5000', {\r\n      auth: {\r\n        token: token\r\n      },\r\n      transports: ['websocket']\r\n    })\r\n\r\n    // Connection events\r\n    newSocket.on('connect', () => {\r\n      console.log('✅ Socket connected:', newSocket.id)\r\n      setIsConnected(true)\r\n      toast.success('Connected to chat server')\r\n    })\r\n\r\n    newSocket.on('disconnect', (reason) => {\r\n      console.log('❌ Socket disconnected:', reason)\r\n      setIsConnected(false)\r\n      if (reason === 'io server disconnect') {\r\n        // Server disconnected the socket, try to reconnect\r\n        newSocket.connect()\r\n      }\r\n    })\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error)\r\n      toast.error('Failed to connect to chat server')\r\n      setIsConnected(false)\r\n    })\r\n\r\n    // Chat events\r\n    newSocket.on('newMessage', (message) => {\r\n      console.log('📨 New message received:', message)\r\n      addMessage(message)\r\n      \r\n      // Show notification if not in current chat\r\n      if (!currentChat || currentChat._id !== message.chatId) {\r\n        toast.success(`New message from ${message.sender.username}`)\r\n      }\r\n    })\r\n\r\n    newSocket.on('newChat', (data) => {\r\n      console.log('💬 New chat created:', data)\r\n      toast.success(`${data.createdBy} added you to a chat`)\r\n      fetchChats() // Refresh chat list\r\n    })\r\n\r\n    // Typing events\r\n    newSocket.on('userTyping', (data) => {\r\n      if (currentChat && data.chatId === currentChat._id) {\r\n        addTypingUser(data.userId)\r\n      }\r\n    })\r\n\r\n    newSocket.on('userStoppedTyping', (data) => {\r\n      if (currentChat && data.chatId === currentChat._id) {\r\n        removeTypingUser(data.userId)\r\n      }\r\n    })\r\n\r\n    // User status events\r\n    newSocket.on('userStatusChanged', (data) => {\r\n      console.log('👤 User status changed:', data)\r\n      setOnlineUsers(prev => {\r\n        const newSet = new Set(prev)\r\n        if (data.isOnline) {\r\n          newSet.add(data.userId)\r\n        } else {\r\n          newSet.delete(data.userId)\r\n        }\r\n        return newSet\r\n      })\r\n    })\r\n\r\n    // Group events\r\n    newSocket.on('groupMembersAdded', (data) => {\r\n      toast.success(`${data.addedBy} added new members to the group`)\r\n      fetchChats()\r\n    })\r\n\r\n    newSocket.on('groupMemberRemoved', (data) => {\r\n      toast.success(`${data.removedBy} removed ${data.removedUser.username} from the group`)\r\n      fetchChats()\r\n    })\r\n\r\n    newSocket.on('removedFromGroup', (data) => {\r\n      toast.error(`You were removed from ${data.chatName} by ${data.removedBy}`)\r\n      fetchChats()\r\n    })\r\n\r\n    newSocket.on('userLeftGroup', (data) => {\r\n      toast.success(`${data.leftUser.username} left the group`)\r\n      fetchChats()\r\n    })\r\n\r\n    newSocket.on('groupInfoUpdated', (data) => {\r\n      toast.success(`${data.updatedBy} updated the group info`)\r\n      fetchChats()\r\n    })\r\n\r\n    // Message read receipts\r\n    newSocket.on('messagesRead', (data) => {\r\n      console.log('📖 Messages read:', data)\r\n    })\r\n\r\n    // File sharing events\r\n    newSocket.on('fileShared', (data) => {\r\n      toast.success(`${data.username} shared a file: ${data.fileName}`)\r\n    })\r\n\r\n    // Error handling\r\n    newSocket.on('error', (error) => {\r\n      console.error('Socket error:', error)\r\n      toast.error('Chat server error occurred')\r\n    })\r\n\r\n    setSocket(newSocket)\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      console.log('🧹 Cleaning up socket connection')\r\n      newSocket.disconnect()\r\n      setSocket(null)\r\n      setIsConnected(false)\r\n    }\r\n  }, [isAuthenticated, token, user?.id])\r\n\r\n  // Join current chat room when chat changes\r\n  useEffect(() => {\r\n    if (socket && currentChat) {\r\n      socket.emit('joinChat', currentChat._id)\r\n      console.log(`🏠 Joined chat room: ${currentChat._id}`)\r\n    }\r\n  }, [socket, currentChat])\r\n\r\n  const contextValue: SocketContextType = {\r\n    socket,\r\n    isConnected,\r\n    onlineUsers\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={contextValue}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/components/dashboard/ChatArea.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { useAuthStore } from '@/lib/stores/authStore'\r\nimport { useChatStore } from '@/lib/stores/chatStore'\r\nimport { useSocket } from '@/components/providers/SocketProvider'\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport {\r\n  PaperAirplaneIcon,\r\n  FaceSmileIcon,\r\n  PaperClipIcon,\r\n  InformationCircleIcon,\r\n  ChevronDownIcon,\r\n  PhoneIcon,\r\n  VideoCameraIcon,\r\n  EllipsisVerticalIcon,\r\n  MagnifyingGlassIcon,\r\n  UserPlusIcon\r\n} from '@heroicons/react/24/outline'\r\n\r\nexport default function ChatArea() {\r\n  const { user } = useAuthStore()\r\n  const { \r\n    currentChat, \r\n    messages, \r\n    sendMessage, \r\n    fetchMessages, \r\n    isLoadingMessages,\r\n    typingUsers \r\n  } = useChatStore()\r\n  const { socket } = useSocket()\r\n  \r\n  const [messageInput, setMessageInput] = useState('')\r\n  const [isTyping, setIsTyping] = useState(false)\r\n  const [userScrolled, setUserScrolled] = useState(false)\r\n  const [showChatInfo, setShowChatInfo] = useState(false)\r\n  const [showMoreActions, setShowMoreActions] = useState(false)\r\n  \r\n  const messagesContainerRef = useRef<HTMLDivElement>(null)\r\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null)\r\n  const scrollTimeoutRef = useRef<NodeJS.Timeout | null>(null)\r\n\r\n  // Fetch messages when chat changes\r\n  useEffect(() => {\r\n    if (currentChat) {\r\n      const chatId = currentChat.id || currentChat._id\r\n      if (chatId) {\r\n        fetchMessages(chatId)\r\n        setUserScrolled(false) // Reset scroll state for new chat\r\n      }\r\n    }\r\n  }, [currentChat, fetchMessages])\r\n\r\n  // Auto-scroll to bottom when messages change (if user hasn't manually scrolled)\r\n  useEffect(() => {\r\n    if (!userScrolled && messagesContainerRef.current) {\r\n      const container = messagesContainerRef.current\r\n      setTimeout(() => {\r\n        container.scrollTop = container.scrollHeight\r\n      }, 100)\r\n    }\r\n  }, [messages, userScrolled])\r\n\r\n  // Handle typing indicator\r\n  useEffect(() => {\r\n    if (socket && currentChat) {\r\n      const chatId = currentChat.id || currentChat._id\r\n      if (isTyping) {\r\n        socket.emit('typing', { chatId })\r\n        \r\n        if (typingTimeoutRef.current) {\r\n          clearTimeout(typingTimeoutRef.current)\r\n        }\r\n        \r\n        typingTimeoutRef.current = setTimeout(() => {\r\n          setIsTyping(false)\r\n          socket.emit('stopTyping', { chatId })\r\n        }, 2000)\r\n      } else {\r\n        socket.emit('stopTyping', { chatId })\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current)\r\n      }\r\n      if (scrollTimeoutRef.current) {\r\n        clearTimeout(scrollTimeoutRef.current)\r\n      }\r\n    }\r\n  }, [isTyping, socket, currentChat])\r\n\r\n  // Handle scroll detection with debouncing\r\n  const handleScroll = () => {\r\n    if (scrollTimeoutRef.current) {\r\n      clearTimeout(scrollTimeoutRef.current)\r\n    }\r\n    \r\n    scrollTimeoutRef.current = setTimeout(() => {\r\n      if (!messagesContainerRef.current) return\r\n      \r\n      const container = messagesContainerRef.current\r\n      const { scrollTop, scrollHeight, clientHeight } = container\r\n      const isAtBottom = scrollHeight - clientHeight - scrollTop < 20\r\n      \r\n      setUserScrolled(!isAtBottom)\r\n    }, 100)\r\n  }\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesContainerRef.current) {\r\n      const container = messagesContainerRef.current\r\n      container.scrollTop = container.scrollHeight\r\n      setUserScrolled(false)\r\n    }\r\n  }\r\n\r\n  const handleSendMessage = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    console.log('🔍 Attempting to send message...')\r\n    console.log('📝 Message input:', messageInput)\r\n    console.log('💬 Current chat:', currentChat)\r\n    \r\n    if (!messageInput.trim() || !currentChat) {\r\n      console.log('❌ Validation failed - missing input or chat')\r\n      return\r\n    }\r\n    \r\n    const content = messageInput.trim()\r\n    setMessageInput('')\r\n    setIsTyping(false)\r\n    \r\n    // Force scroll to bottom when sending\r\n    setUserScrolled(false)\r\n    \r\n    const chatId = currentChat.id || currentChat._id\r\n    console.log('🚀 Sending message:', content, 'to chat:', chatId)\r\n    \r\n    if (!chatId) {\r\n      console.error('❌ No chat ID available')\r\n      return\r\n    }\r\n    \r\n    await sendMessage(chatId, content)\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMessageInput(e.target.value)\r\n    \r\n    if (e.target.value.trim() && !isTyping) {\r\n      setIsTyping(true)\r\n    } else if (!e.target.value.trim() && isTyping) {\r\n      setIsTyping(false)\r\n    }\r\n  }\r\n\r\n  const getChatTitle = () => {\r\n    if (!currentChat) return ''\r\n    \r\n    if (currentChat.isGroup) {\r\n      return currentChat.name\r\n    }\r\n    \r\n    const otherParticipant = currentChat.participants.find(p => p._id !== user?.id)\r\n    return otherParticipant?.username || 'Unknown User'\r\n  }\r\n\r\n  if (!currentChat) {\r\n    return null\r\n  }\r\n\r\n    return (\r\n    <div className=\"flex-1 flex flex-col bg-gray-850 h-full relative\">\r\n      {/* Enhanced Chat Header */}\r\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-700 bg-gray-800 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          {/* Avatar */}\r\n          <div className=\"w-12 h-12 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center shadow-md\">\r\n            <span className=\"text-white font-bold text-lg\">\r\n              {getChatTitle().charAt(0).toUpperCase()}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Chat Info */}\r\n          <div className=\"flex-1\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <h2 className=\"text-white font-semibold text-lg\">{getChatTitle()}</h2>\r\n              {!currentChat.isGroup && (\r\n                <div className={`w-3 h-3 rounded-full ${\r\n                  currentChat.participants.find(p => p._id !== user?.id)?.isOnline \r\n                    ? 'bg-green-500' \r\n                    : 'bg-gray-500'\r\n                }`} />\r\n              )}\r\n            </div>\r\n            {currentChat.isGroup ? (\r\n              <div className=\"flex items-center space-x-1\">\r\n                <p className=\"text-gray-400 text-sm\">\r\n                  {currentChat.participants.length} members\r\n                </p>\r\n                <span className=\"text-gray-500\">•</span>\r\n                <p className=\"text-gray-400 text-sm\">\r\n                  {currentChat.participants.filter(p => p.isOnline).length} online\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-gray-400 text-sm\">\r\n                {currentChat.participants.find(p => p._id !== user?.id)?.isOnline ? 'Active now' : 'Last seen recently'}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Header Actions */}\r\n        <div className=\"flex items-center space-x-1\">\r\n          {/* Search Messages */}\r\n          <button \r\n            className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-full transition-colors\"\r\n            title=\"Search in conversation\"\r\n          >\r\n            <MagnifyingGlassIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          \r\n          {/* Voice Call */}\r\n          <button \r\n            className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-full transition-colors\"\r\n            title=\"Voice call\"\r\n          >\r\n            <PhoneIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          \r\n          {/* Video Call */}\r\n          <button \r\n            className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-full transition-colors\"\r\n            title=\"Video call\"\r\n          >\r\n            <VideoCameraIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          \r\n          {/* Add People (for groups) */}\r\n          {currentChat.isGroup && (\r\n            <button \r\n              className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-full transition-colors\"\r\n              title=\"Add people\"\r\n            >\r\n              <UserPlusIcon className=\"w-5 h-5\" />\r\n            </button>\r\n          )}\r\n          \r\n          {/* Chat Info */}\r\n          <button \r\n            onClick={() => setShowChatInfo(!showChatInfo)}\r\n            className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-full transition-colors\"\r\n            title=\"Chat information\"\r\n          >\r\n            <InformationCircleIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          \r\n          {/* More Actions */}\r\n          <div className=\"relative\">\r\n            <button \r\n              onClick={() => setShowMoreActions(!showMoreActions)}\r\n              className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-full transition-colors\"\r\n              title=\"More actions\"\r\n            >\r\n              <EllipsisVerticalIcon className=\"w-5 h-5\" />\r\n            </button>\r\n            \r\n            {/* More Actions Dropdown */}\r\n            {showMoreActions && (\r\n              <div className=\"absolute right-0 top-12 w-56 bg-gray-800 border border-gray-700 rounded-lg shadow-lg z-50\">\r\n                <div className=\"p-2\">\r\n                  <button className=\"w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-gray-700 rounded-lg\">\r\n                    View shared media\r\n                  </button>\r\n                  <button className=\"w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-gray-700 rounded-lg\">\r\n                    Search messages\r\n                  </button>\r\n                  <button className=\"w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-gray-700 rounded-lg\">\r\n                    Notification settings\r\n                  </button>\r\n                  {currentChat.isGroup && (\r\n                    <button className=\"w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-gray-700 rounded-lg\">\r\n                      Group settings\r\n                    </button>\r\n                  )}\r\n                  <hr className=\"my-2 border-gray-700\" />\r\n                  <button className=\"w-full text-left px-3 py-2 text-sm text-red-400 hover:bg-gray-700 rounded-lg\">\r\n                    {currentChat.isGroup ? 'Leave group' : 'Block user'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Info Panel (collapsible) */}\r\n      {showChatInfo && (\r\n        <div className=\"bg-gray-800 border-b border-gray-700 p-4\">\r\n          <div className=\"flex items-center justify-between mb-3\">\r\n            <h3 className=\"text-white font-semibold\">Chat Information</h3>\r\n            <button \r\n              onClick={() => setShowChatInfo(false)}\r\n              className=\"text-gray-400 hover:text-white\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          <div className=\"space-y-2 text-sm\">\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-400\">Type:</span>\r\n              <span className=\"text-white\">{currentChat.isGroup ? 'Group Chat' : 'Direct Message'}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-400\">Members:</span>\r\n              <span className=\"text-white\">{currentChat.participants.length}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-400\">Created:</span>\r\n              <span className=\"text-white\">\r\n                {new Date(currentChat.createdAt || Date.now()).toLocaleDateString()}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}      {/* Messages Area - FIXED CONTAINER */}\r\n      <div \r\n        ref={messagesContainerRef}\r\n        onScroll={handleScroll}\r\n        className=\"flex-1 overflow-y-auto p-4 space-y-4\"\r\n        style={{ \r\n          height: 'calc(100vh - 200px)', // More reasonable calculation\r\n          overflowY: 'auto' // Only shows scrollbar when needed\r\n        }}\r\n      >\r\n        {isLoadingMessages ? (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <div className=\"text-center\">\r\n              <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-2\" />\r\n              <p className=\"text-gray-400 text-sm\">Loading messages...</p>\r\n            </div>\r\n          </div>\r\n        ) : messages.length === 0 ? (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <div className=\"text-center\">\r\n              <div className=\"w-16 h-16 bg-gray-700 rounded-full flex items-center justify-center mb-4 mx-auto\">\r\n                <InformationCircleIcon className=\"w-8 h-8 text-gray-400\" />\r\n              </div>\r\n              <h3 className=\"text-lg font-medium text-white mb-2\">No messages yet</h3>\r\n              <p className=\"text-gray-400 text-sm\">\r\n                {currentChat.isGroup \r\n                  ? 'Be the first to send a message in this group!'\r\n                  : `Say hello to ${getChatTitle()}!`\r\n                }\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-2\">\r\n            {messages.map((message, index) => {\r\n              const isOwnMessage = message.sender._id === user?.id\r\n              \r\n              return (\r\n                <div \r\n                  key={message._id} \r\n                  className={`flex ${isOwnMessage ? 'justify-end' : 'justify-start'}`}\r\n                >\r\n                  <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\r\n                    isOwnMessage \r\n                      ? 'bg-blue-600 text-white' \r\n                      : 'bg-gray-700 text-white'\r\n                  }`}>\r\n                    {!isOwnMessage && (\r\n                      <p className=\"text-xs text-gray-300 mb-1\">{message.sender.username}</p>\r\n                    )}\r\n                    <p className=\"text-sm\">{message.content}</p>\r\n                    <p className=\"text-xs text-gray-300 mt-1\">\r\n                      {new Date(message.createdAt).toLocaleTimeString()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n            \r\n            {/* Typing Indicator */}\r\n            {typingUsers.size > 0 && (\r\n              <div className=\"flex justify-start\">\r\n                <div className=\"bg-gray-700 px-4 py-2 rounded-lg\">\r\n                  <p className=\"text-gray-400 text-sm italic\">Someone is typing...</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Scroll to Bottom Button */}\r\n      {userScrolled && (\r\n        <div className=\"absolute bottom-24 right-6 z-10\">\r\n          <button\r\n            onClick={scrollToBottom}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white rounded-full p-3 shadow-lg transition-all duration-200\"\r\n            title=\"Scroll to bottom\"\r\n          >\r\n            <ChevronDownIcon className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Message Input */}\r\n      <div className=\"p-4 border-t border-gray-700 bg-gray-800\">\r\n        <form onSubmit={handleSendMessage} className=\"flex items-end space-x-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"p-3 text-gray-400 hover:text-white hover:bg-gray-700 rounded-full transition-colors\"\r\n          >\r\n            <PaperClipIcon className=\"w-6 h-6\" />\r\n          </button>\r\n\r\n          <div className=\"flex-1 relative\">\r\n            <input\r\n              type=\"text\"\r\n              value={messageInput}\r\n              onChange={handleInputChange}\r\n              placeholder={`Message ${getChatTitle()}...`}\r\n              className=\"w-full px-4 py-3 pr-12 bg-gray-700 border border-gray-600 rounded-2xl text-white placeholder-gray-400 focus:outline-none focus:border-blue-500\"\r\n              maxLength={5000}\r\n            />\r\n            \r\n            <button\r\n              type=\"button\"\r\n              className=\"absolute right-3 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-white transition-colors\"\r\n            >\r\n              <FaceSmileIcon className=\"w-6 h-6\" />\r\n            </button>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!messageInput.trim()}\r\n            className={`p-3 rounded-full transition-all ${\r\n              messageInput.trim()\r\n                ? 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                : 'bg-gray-700 text-gray-500 cursor-not-allowed'\r\n            }`}\r\n          >\r\n            <PaperAirplaneIcon className=\"w-6 h-6\" />\r\n          </button>\r\n        </form>\r\n\r\n        {messageInput.length > 4000 && (\r\n          <div className=\"mt-2 text-right\">\r\n            <span className={`text-xs ${\r\n              messageInput.length > 4500 ? 'text-red-400' : 'text-yellow-400'\r\n            }`}>\r\n              {messageInput.length}/5000\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1634, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/components/dashboard/SimpleSidebar.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { useAuthStore } from '@/lib/stores/authStore'\r\nimport { useChatStore } from '@/lib/stores/chatStore'\r\nimport {\r\n  ChatBubbleLeftRightIcon,\r\n  MagnifyingGlassIcon,\r\n  PlusIcon,\r\n  UserGroupIcon,\r\n  UserIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  ArrowRightOnRectangleIcon\r\n} from '@heroicons/react/24/outline'\r\n\r\ninterface SidebarProps {\r\n  collapsed: boolean\r\n  onToggleCollapse: () => void\r\n  onShowProfile: () => void\r\n  onShowCreateChat: () => void\r\n}\r\n\r\nexport default function SimpleSidebar({ \r\n  collapsed, \r\n  onToggleCollapse, \r\n  onShowProfile, \r\n  onShowCreateChat \r\n}: SidebarProps) {\r\n  const { user, logout } = useAuthStore()\r\n  const { chats, currentChat, selectChat } = useChatStore()\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n\r\n  // Filter chats based on search term\r\n  const filteredChats = (chats || []).filter(chat => {\r\n    if (!searchTerm) return true\r\n    const chatName = chat.isGroup \r\n      ? chat.name \r\n      : (chat.participants || []).find(p => p._id !== user?.id)?.username || 'Unknown User'\r\n    return chatName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  })\r\n\r\n  const handleSelectChat = (chat: any) => {\r\n    console.log('🏪 SimpleSidebar handleSelectChat called with:', chat)\r\n    console.log('🏪 Chat object keys:', Object.keys(chat))\r\n    console.log('🏪 Chat.id:', chat.id)\r\n    console.log('🏪 Chat type:', typeof chat)\r\n    selectChat(chat)\r\n  }\r\n\r\n  // Debug logging\r\n  useEffect(() => {\r\n    console.log('🏪 SimpleSidebar - chats from store:', chats)\r\n    console.log('🏪 SimpleSidebar - filteredChats:', filteredChats)\r\n    if (chats && chats.length > 0) {\r\n      chats.forEach((chat, index) => {\r\n        console.log(`🏪 Chat ${index}:`, chat)\r\n        console.log(`🏪 Chat ${index} id:`, chat.id)\r\n        console.log(`🏪 Chat ${index} participants:`, chat.participants)\r\n      })\r\n    }\r\n  }, [chats, filteredChats])\r\n\r\n  if (collapsed) {\r\n    return (\r\n      <div className=\"h-full bg-gray-800 border-r border-gray-700 p-2 flex flex-col\">\r\n        <button\r\n          onClick={onToggleCollapse}\r\n          className=\"w-full p-3 text-gray-400 hover:text-white hover:bg-gray-700 rounded-lg transition-colors mb-4\"\r\n          title=\"Expand Sidebar\"\r\n        >\r\n          <ChevronRightIcon className=\"w-5 h-5 mx-auto\" />\r\n        </button>\r\n        \r\n        <button\r\n          onClick={onShowCreateChat}\r\n          className=\"w-full p-3 text-gray-400 hover:text-white hover:bg-gray-700 rounded-lg transition-colors mb-4\"\r\n          title=\"New Chat\"\r\n        >\r\n          <PlusIcon className=\"w-5 h-5 mx-auto\" />\r\n        </button>\r\n\r\n        <div className=\"flex-1 space-y-2\">\r\n          {filteredChats.slice(0, 5).map((chat) => (\r\n            <button\r\n              key={chat.id || chat._id}\r\n              onClick={() => {\r\n                console.log('🖱️ Sidebar: Chat clicked:', chat)\r\n                console.log('🆔 Sidebar: Chat ID:', chat.id || chat._id)\r\n                selectChat(chat)\r\n              }}\r\n              className={`w-full p-2 rounded-lg transition-colors ${\r\n                currentChat?.id === chat.id || currentChat?._id === chat._id\r\n                  ? 'bg-blue-600 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-gray-700'\r\n              }`}\r\n              title={chat.isGroup ? chat.name : (chat.participants || []).find(p => p._id !== user?.id)?.username}\r\n            >\r\n              {chat.isGroup ? (\r\n                <UserGroupIcon className=\"w-5 h-5 mx-auto\" />\r\n              ) : (\r\n                <UserIcon className=\"w-5 h-5 mx-auto\" />\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <button\r\n          onClick={onShowProfile}\r\n          className=\"w-full p-3 text-gray-400 hover:text-white hover:bg-gray-700 rounded-lg transition-colors mt-4\"\r\n          title=\"Profile\"\r\n        >\r\n          <UserIcon className=\"w-5 h-5 mx-auto\" />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full bg-gray-800 border-r border-gray-700 flex flex-col\">\r\n      {/* Header */}\r\n      <div className=\"p-4 border-b border-gray-700\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-xl font-bold text-white\">Chats</h2>\r\n          <button\r\n            onClick={onToggleCollapse}\r\n            className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-lg transition-colors\"\r\n            title=\"Collapse Sidebar\"\r\n          >\r\n            <ChevronLeftIcon className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Search */}\r\n        <div className=\"relative\">\r\n          <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search chats...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"w-full pl-10 pr-4 py-2 bg-gray-700 text-white placeholder-gray-400 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n          />\r\n        </div>\r\n\r\n        {/* New Chat Button */}\r\n        <button\r\n          onClick={onShowCreateChat}\r\n          className=\"w-full mt-3 p-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors flex items-center justify-center gap-2\"\r\n        >\r\n          <PlusIcon className=\"w-4 h-4\" />\r\n          <span>New Chat</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Chat List */}\r\n      <div className=\"flex-1 overflow-y-auto\">\r\n        {filteredChats.length === 0 ? (\r\n          <div className=\"p-4 text-center text-gray-400\">\r\n            {searchTerm ? 'No chats found' : 'No chats yet'}\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-2 space-y-1\">\r\n            {filteredChats.map((chat, index) => {\r\n              const isSelected = currentChat?.id === chat.id || currentChat?._id === chat._id\r\n              const chatName = chat.isGroup \r\n                ? chat.name \r\n                : (chat.participants || []).find(p => p._id !== user?.id)?.username || 'Unknown User'\r\n              \r\n              return (\r\n                <button\r\n                  key={chat.id || chat._id || `chat-${index}`}\r\n                  onClick={() => handleSelectChat(chat)}\r\n                  className={`w-full p-3 rounded-lg transition-colors text-left ${\r\n                    isSelected\r\n                      ? 'bg-blue-600 text-white'\r\n                      : 'text-gray-300 hover:bg-gray-700'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      {chat.isGroup ? (\r\n                        <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\r\n                          <UserGroupIcon className=\"w-5 h-5 text-white\" />\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center\">\r\n                          <UserIcon className=\"w-5 h-5 text-white\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <p className={`text-sm font-medium truncate ${\r\n                          isSelected ? 'text-white' : 'text-gray-200'\r\n                        }`}>\r\n                          {chatName}\r\n                        </p>\r\n                      </div>\r\n                      <p className={`text-xs truncate ${\r\n                        isSelected ? 'text-blue-100' : 'text-gray-400'\r\n                      }`}>\r\n                        {chat.lastMessage?.content || 'No messages yet'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </button>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* User Profile Section */}\r\n      <div className=\"p-4 border-t border-gray-700\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center\">\r\n            <UserIcon className=\"w-5 h-5 text-white\" />\r\n          </div>\r\n          <div className=\"flex-1 min-w-0\">\r\n            <p className=\"text-sm font-medium text-white truncate\">\r\n              {user?.username}\r\n            </p>\r\n            <p className=\"text-xs text-gray-400\">Online</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-3 flex space-x-2\">\r\n          <button\r\n            onClick={onShowProfile}\r\n            className=\"flex-1 py-2 px-3 bg-gray-700 hover:bg-gray-600 text-white text-sm rounded transition-colors flex items-center justify-center gap-1\"\r\n          >\r\n            <UserIcon className=\"w-4 h-4\" />\r\n            <span>Profile</span>\r\n          </button>\r\n          <button\r\n            onClick={logout}\r\n            className=\"flex-1 py-2 px-3 bg-red-600 hover:bg-red-700 text-white text-sm rounded transition-colors flex items-center justify-center gap-1\"\r\n          >\r\n            <ArrowRightOnRectangleIcon className=\"w-4 h-4\" />\r\n            <span>Logout</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2107, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/components/modals/CreateChatModal.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useChatStore } from '@/lib/stores/chatStore'\r\nimport { useAuthStore } from '@/lib/stores/authStore'\r\nimport api, { endpoints } from '@/lib/api'\r\nimport toast from 'react-hot-toast'\r\nimport {\r\n  XMarkIcon,\r\n  MagnifyingGlassIcon,\r\n  UserIcon,\r\n  UserGroupIcon,\r\n  PlusIcon\r\n} from '@heroicons/react/24/outline'\r\n\r\ninterface User {\r\n  _id: string\r\n  username: string\r\n  email: string\r\n  avatar?: string\r\n  isOnline: boolean\r\n}\r\n\r\ninterface CreateChatForm {\r\n  name: string\r\n  isGroup: boolean\r\n}\r\n\r\ninterface CreateChatModalProps {\r\n  onClose: () => void\r\n}\r\n\r\nexport default function CreateChatModal({ onClose }: CreateChatModalProps) {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [searchResults, setSearchResults] = useState<User[]>([])\r\n  const [selectedUsers, setSelectedUsers] = useState<User[]>([])\r\n  const [isSearching, setIsSearching] = useState(false)\r\n  const [step, setStep] = useState<'search' | 'details'>('search')\r\n  \r\n  const { createChat } = useChatStore()\r\n  const { user } = useAuthStore()\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    setValue,\r\n    formState: { errors }\r\n  } = useForm<CreateChatForm>({\r\n    defaultValues: {\r\n      isGroup: false\r\n    }\r\n  })\r\n\r\n  const isGroup = watch('isGroup')\r\n\r\n  // Handler for changing chat type\r\n  const handleChatTypeChange = (newIsGroup: boolean) => {\r\n    setValue('isGroup', newIsGroup)\r\n    if (!newIsGroup && selectedUsers.length > 1) {\r\n      // If switching to direct chat, keep only first user\r\n      setSelectedUsers(selectedUsers.slice(0, 1))\r\n    }\r\n  }\r\n\r\n  // Search users\r\n  useEffect(() => {\r\n    const searchUsers = async () => {\r\n      if (searchQuery.length < 2) {\r\n        setSearchResults([])\r\n        return\r\n      }\r\n\r\n      setIsSearching(true)\r\n      try {\r\n        const response = await api.get(`${endpoints.searchUsers}?query=${encodeURIComponent(searchQuery)}`)\r\n        setSearchResults(response.data.users || [])\r\n      } catch (error) {\r\n        console.error('Search users error:', error)\r\n        toast.error('Failed to search users')\r\n      } finally {\r\n        setIsSearching(false)\r\n      }\r\n    }\r\n\r\n    const debounceTimer = setTimeout(searchUsers, 300)\r\n    return () => clearTimeout(debounceTimer)\r\n  }, [searchQuery])\r\n\r\n  const handleUserSelect = (selectedUser: User) => {\r\n    if (selectedUsers.find(u => u._id === selectedUser._id)) {\r\n      // Remove user\r\n      setSelectedUsers(selectedUsers.filter(u => u._id !== selectedUser._id))\r\n    } else {\r\n      // Add user\r\n      if (!isGroup && selectedUsers.length >= 1) {\r\n        // For direct chats, only allow one user\r\n        setSelectedUsers([selectedUser])\r\n      } else {\r\n        setSelectedUsers([...selectedUsers, selectedUser])\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    if (selectedUsers.length === 0) {\r\n      toast.error('Please select at least one user')\r\n      return\r\n    }\r\n\r\n    if (!isGroup) {\r\n      // Create direct chat immediately\r\n      handleCreateChat({ name: '', isGroup: false })\r\n    } else {\r\n      setStep('details')\r\n    }\r\n  }\r\n\r\n  const handleCreateChat = async (data: CreateChatForm) => {\r\n    if (selectedUsers.length === 0) {\r\n      toast.error('Please select at least one user')\r\n      return\r\n    }\r\n\r\n    if (data.isGroup && !data.name.trim()) {\r\n      toast.error('Please enter a group name')\r\n      return\r\n    }\r\n\r\n    const participantIds = selectedUsers.map(u => u._id)\r\n    const chat = await createChat(participantIds, data.isGroup, data.name)\r\n    \r\n    if (chat) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-gray-800 rounded-2xl w-full max-w-md max-h-[90vh] flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-700\">\r\n          <h2 className=\"text-xl font-semibold text-white\">\r\n            {step === 'search' ? 'New Chat' : 'Group Details'}\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-lg transition-colors\"\r\n          >\r\n            <XMarkIcon className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {step === 'search' ? (\r\n          <>\r\n            {/* Chat Type Selection */}\r\n            <div className=\"p-6 border-b border-gray-700\">\r\n              <div className=\"flex space-x-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleChatTypeChange(false)}\r\n                  className={`flex-1 p-4 rounded-lg border-2 transition-colors ${\r\n                    !isGroup\r\n                      ? 'border-blue-500 bg-blue-500/10 text-blue-400'\r\n                      : 'border-gray-600 text-gray-400 hover:border-gray-500'\r\n                  }`}\r\n                >\r\n                  <UserIcon className=\"w-8 h-8 mx-auto mb-2\" />\r\n                  <div className=\"text-sm font-medium\">Direct Chat</div>\r\n                  <div className=\"text-xs opacity-75\">One-on-one conversation</div>\r\n                </button>\r\n                \r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleChatTypeChange(true)}\r\n                  className={`flex-1 p-4 rounded-lg border-2 transition-colors ${\r\n                    isGroup\r\n                      ? 'border-blue-500 bg-blue-500/10 text-blue-400'\r\n                      : 'border-gray-600 text-gray-400 hover:border-gray-500'\r\n                  }`}\r\n                >\r\n                  <UserGroupIcon className=\"w-8 h-8 mx-auto mb-2\" />\r\n                  <div className=\"text-sm font-medium\">Group Chat</div>\r\n                  <div className=\"text-xs opacity-75\">Multiple participants</div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Search */}\r\n            <div className=\"p-6 border-b border-gray-700\">\r\n              <div className=\"relative\">\r\n                <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search users by username or email...\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-3 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Selected Users */}\r\n            {selectedUsers.length > 0 && (\r\n              <div className=\"p-6 border-b border-gray-700\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <span className=\"text-sm font-medium text-gray-300\">\r\n                    Selected ({selectedUsers.length})\r\n                  </span>\r\n                  <button\r\n                    onClick={() => setSelectedUsers([])}\r\n                    className=\"text-xs text-red-400 hover:text-red-300\"\r\n                  >\r\n                    Clear all\r\n                  </button>\r\n                </div>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {selectedUsers.map((selectedUser) => (\r\n                    <div\r\n                      key={selectedUser._id}\r\n                      className=\"flex items-center space-x-2 bg-blue-600 text-white px-3 py-1 rounded-full text-sm\"\r\n                    >\r\n                      <span>{selectedUser.username}</span>\r\n                      <button\r\n                        onClick={() => handleUserSelect(selectedUser)}\r\n                        className=\"text-blue-200 hover:text-white\"\r\n                      >\r\n                        <XMarkIcon className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Search Results */}\r\n            <div className=\"flex-1 overflow-y-auto\">\r\n              {isSearching ? (\r\n                <div className=\"p-6 text-center\">\r\n                  <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-2\" />\r\n                  <p className=\"text-gray-400 text-sm\">Searching users...</p>\r\n                </div>\r\n              ) : searchQuery.length < 2 ? (\r\n                <div className=\"p-6 text-center\">\r\n                  <MagnifyingGlassIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                  <p className=\"text-gray-400 text-sm\">\r\n                    Type at least 2 characters to search for users\r\n                  </p>\r\n                </div>\r\n              ) : searchResults.length === 0 ? (\r\n                <div className=\"p-6 text-center\">\r\n                  <div className=\"w-12 h-12 bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                    <UserIcon className=\"w-6 h-6 text-gray-400\" />\r\n                  </div>\r\n                  <p className=\"text-gray-400 text-sm\">No users found</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"p-4 space-y-2\">\r\n                  {searchResults.map((searchUser) => {\r\n                    const isSelected = selectedUsers.find(u => u._id === searchUser._id)\r\n                    const isCurrentUser = searchUser._id === user?.id\r\n                    \r\n                    if (isCurrentUser) return null\r\n                    \r\n                    return (\r\n                      <button\r\n                        key={searchUser._id}\r\n                        onClick={() => handleUserSelect(searchUser)}\r\n                        disabled={!isGroup && selectedUsers.length >= 1 && !isSelected}\r\n                        className={`w-full p-3 rounded-lg text-left transition-colors ${\r\n                          isSelected\r\n                            ? 'bg-blue-600 text-white'\r\n                            : 'hover:bg-gray-700 text-gray-300'\r\n                        } ${\r\n                          !isGroup && selectedUsers.length >= 1 && !isSelected\r\n                            ? 'opacity-50 cursor-not-allowed'\r\n                            : ''\r\n                        }`}\r\n                      >\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <div className=\"relative\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center\">\r\n                              <UserIcon className=\"w-5 h-5 text-white\" />\r\n                            </div>\r\n                            <div className={`absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-gray-800 ${\r\n                              searchUser.isOnline ? 'bg-green-500' : 'bg-gray-500'\r\n                            }`} />\r\n                          </div>\r\n                          <div className=\"flex-1\">\r\n                            <p className=\"font-medium\">{searchUser.username}</p>\r\n                            <p className=\"text-sm opacity-75\">{searchUser.email}</p>\r\n                          </div>\r\n                          {isSelected && (\r\n                            <div className=\"w-6 h-6 bg-white rounded-full flex items-center justify-center\">\r\n                              <PlusIcon className=\"w-4 h-4 text-blue-600 rotate-45\" />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </button>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Footer */}\r\n            <div className=\"p-6 border-t border-gray-700\">\r\n              <button\r\n                onClick={handleNext}\r\n                disabled={selectedUsers.length === 0}\r\n                className=\"w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isGroup ? 'Next' : 'Create Chat'}\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* Group Details Form */}\r\n            <form onSubmit={handleSubmit(handleCreateChat)} className=\"flex-1 flex flex-col\">\r\n              <div className=\"p-6 space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                    Group Name\r\n                  </label>\r\n                  <input\r\n                    {...register('name', {\r\n                      required: 'Group name is required',\r\n                      minLength: {\r\n                        value: 1,\r\n                        message: 'Group name cannot be empty'\r\n                      },\r\n                      maxLength: {\r\n                        value: 100,\r\n                        message: 'Group name is too long'\r\n                      }\r\n                    })}\r\n                    type=\"text\"\r\n                    className=\"input-field w-full\"\r\n                    placeholder=\"Enter group name\"\r\n                    autoFocus\r\n                  />\r\n                  {errors.name && (\r\n                    <p className=\"mt-1 text-sm text-red-400\">{errors.name.message}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Selected Members Preview */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                    Members ({selectedUsers.length + 1})\r\n                  </label>\r\n                  <div className=\"space-y-2 max-h-32 overflow-y-auto\">\r\n                    {/* Current user */}\r\n                    <div className=\"flex items-center space-x-3 p-2 bg-gray-700 rounded-lg\">\r\n                      <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\r\n                        <UserIcon className=\"w-4 h-4 text-white\" />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <p className=\"text-sm font-medium text-white\">{user?.username} (You)</p>\r\n                        <p className=\"text-xs text-gray-400\">Admin</p>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* Selected users */}\r\n                    {selectedUsers.map((selectedUser) => (\r\n                      <div key={selectedUser._id} className=\"flex items-center space-x-3 p-2 bg-gray-700 rounded-lg\">\r\n                        <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center\">\r\n                          <UserIcon className=\"w-4 h-4 text-white\" />\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <p className=\"text-sm font-medium text-white\">{selectedUser.username}</p>\r\n                          <p className=\"text-xs text-gray-400\">Member</p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Footer */}\r\n              <div className=\"p-6 border-t border-gray-700 flex space-x-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setStep('search')}\r\n                  className=\"flex-1 btn-secondary\"\r\n                >\r\n                  Back\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"flex-1 btn-primary\"\r\n                >\r\n                  Create Group\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2897, "column": 0}, "map": {"version":3,"sources":["file:///C:/Ronith_prgramming/chat_app_reqium%28copy%29/grp_chat_app/frontend/app/dashboard/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useAuthStore } from '@/lib/stores/authStore'\r\nimport { useChatStore } from '@/lib/stores/chatStore'\r\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\r\nimport ChatArea from '@/components/dashboard/ChatArea'\r\nimport SimpleSidebar from '@/components/dashboard/SimpleSidebar'\r\nimport CreateChatModal from '@/components/modals/CreateChatModal'\r\n\r\nexport default function DashboardPage() {\r\n  const router = useRouter()\r\n  const { user, isAuthenticated, isLoading } = useAuthStore()\r\n  const { fetchChats } = useChatStore()\r\n  \r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false)\r\n  const [showCreateChatModal, setShowCreateChatModal] = useState(false)\r\n  \r\n  // Redirect if not authenticated\r\n  useEffect(() => {\r\n    if (!isAuthenticated && !isLoading) {\r\n      router.push('/login')\r\n    }\r\n  }, [isAuthenticated, isLoading, router])\r\n\r\n  // Fetch chats on mount\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchChats()\r\n    }\r\n  }, [isAuthenticated, fetchChats])\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (isLoading || !isAuthenticated) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <LoadingSpinner size=\"large\" />\r\n          <p className=\"text-white mt-4\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <LoadingSpinner size=\"large\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen bg-gray-900 flex overflow-hidden\">\r\n      {/* Left Sidebar with Chat List */}\r\n      <div className={`${sidebarCollapsed ? 'w-16' : 'w-80'} border-r border-gray-700 flex flex-col transition-all duration-300`}>\r\n        <SimpleSidebar \r\n          collapsed={sidebarCollapsed}\r\n          onToggleCollapse={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n          onShowProfile={() => {}} \r\n          onShowCreateChat={() => setShowCreateChatModal(true)}\r\n        />\r\n      </div>\r\n      \r\n      {/* Main Chat Area - No debug panel on the right */}\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <ChatArea />\r\n      </div>\r\n      \r\n      {/* Create Chat Modal */}\r\n      {showCreateChatModal && (\r\n        <CreateChatModal onClose={() => setShowCreateChatModal(false)} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAWe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,eAAY,AAAD;IACxD,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,eAAY,AAAD;IAElC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,gCAAgC;IAChC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,mBAAmB,CAAC,WAAW;YAClC,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAiB;QAAW;KAAO;IAEvC,uBAAuB;IACvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,iBAAiB;YACnB;QACF;IACF,GAAG;QAAC;QAAiB;KAAW;IAEhC,qDAAqD;IACrD,IAAI,aAAa,CAAC,iBAAiB;QACjC,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,mIAAA,CAAA,UAAc;wBAAC,MAAK;;;;;;kCACrB,8OAAC;wBAAE,WAAU;kCAAkB;;;;;;;;;;;;;;;;;IAIvC;IAEA,IAAI,CAAC,MAAM;QACT,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,mIAAA,CAAA,UAAc;gBAAC,MAAK;;;;;;;;;;;IAG3B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAW,GAAG,mBAAmB,SAAS,OAAO,mEAAmE,CAAC;0BACxH,cAAA,8OAAC,yIAAA,CAAA,UAAa;oBACZ,WAAW;oBACX,kBAAkB,IAAM,oBAAoB,CAAC;oBAC7C,eAAe,KAAO;oBACtB,kBAAkB,IAAM,uBAAuB;;;;;;;;;;;0BAKnD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,oIAAA,CAAA,UAAQ;;;;;;;;;;YAIV,qCACC,8OAAC,wIAAA,CAAA,UAAe;gBAAC,SAAS,IAAM,uBAAuB;;;;;;;;;;;;AAI/D","debugId":null}}]
}